name: Farm2Fork CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
        cache-dependency-path: backend/package.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/farm2fork_test
        JWT_SECRET: test-jwt-secret
        PORT: 5001

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false
      env:
        CI: true

  build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
    
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
      env:
        CI: false # Prevents treating warnings as errors
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend-build
        path: frontend/build
    
    - name: Prepare backend for deployment
      run: |
        cd backend
        npm ci --production
    
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v2
      with:
        name: backend-build
        path: |
          backend/
          !backend/node_modules
          !backend/__tests__

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
    - name: Download frontend build artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend-build
        path: frontend/build
    
    - name: Download backend artifacts
      uses: actions/download-artifact@v2
      with:
        name: backend-build
        path: backend
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add deployment commands here (e.g., AWS, Heroku, etc.)
        # This is a placeholder for actual deployment commands
        echo "Deployed to staging successfully!"

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Download frontend build artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend-build
        path: frontend/build
    
    - name: Download backend artifacts
      uses: actions/download-artifact@v2
      with:
        name: backend-build
        path: backend
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add deployment commands here (e.g., AWS, Heroku, etc.)
        # This is a placeholder for actual deployment commands
        echo "Deployed to production successfully!"